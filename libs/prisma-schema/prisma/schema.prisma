datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique @db.VarChar(128)
  password      String    @db.VarChar(256)
  nickName      String    @map("nick_name") @db.VarChar(32)
  avatarUrl     String?   @map("avatar_url") @db.VarChar(256)
  lastLoginTime DateTime? @map("last_login_time")
  status        Int       @default(1)
  lastErrorTime DateTime? @map("last_error_time")
  errorCount    Int       @default(0) @map("error_count")
  lastLoginIp   String?   @map("last_login_ip") @db.VarChar(128)
  lastErrorIp   String?   @map("last_error_ip") @db.VarChar(128)
  description   String?   @db.VarChar(512)
  createTime    DateTime  @default(now()) @map("create_time")
  updateTime    DateTime  @default(now()) @map("update_time")
  version       Int

  @@map("t_user")
}

model Album {
  id          Int      @id @default(autoincrement())
  displayName String   @map("display_name") @db.VarChar(16)
  folderName  String   @map("folder_name") @db.VarChar(32)
  description String?  @db.VarChar(256)
  previewUrl  String?  @map("preview_url") @db.VarChar(256)
  createTime  DateTime @default(now()) @map("create_time")
  updateTime  DateTime @default(now()) @map("update_time")
  version     Int

  pictures Picture[]

  @@map("t_album")
}

model Article {
  id         String   @id @default(uuid())
  title      String   @db.VarChar(128)
  author     String   @db.VarChar(32)
  content    String   @db.Text
  status     Int      @default(1)
  categoryId Int?     @map("category_id")
  viewCount  Int      @default(0) @map("view_count")
  previewUrl String?  @map("preview_url") @db.VarChar(256)
  isTop      Boolean  @default(false) @map("is_top")
  isFire     Boolean  @default(false) @map("is_fire")
  isDraft    Boolean  @default(false) @map("is_draft")
  createTime DateTime @default(now()) @map("create_time")
  updateTime DateTime @default(now()) @map("update_time")
  version    Int

  category Category? @relation(fields: [categoryId], references: [id])
  tags     Tag[]
  pictures Picture[]

  @@map("t_article")
}

model Category {
  id           Int      @id @default(autoincrement())
  categoryName String   @map("category_name") @db.VarChar(32)
  createTime   DateTime @default(now()) @map("create_time")
  updateTime   DateTime @default(now()) @map("update_time")
  version      Int

  articles Article[]

  @@map("t_category")
}

model Picture {
  id          Int      @id @default(autoincrement())
  albumId     Int      @map("album_id")
  name        String   @db.VarChar(64)
  description String?  @db.VarChar(256)
  url         String   @db.VarChar(512)
  storageKey  String   @map("storage_key") @db.VarChar(128)
  createTime  DateTime @default(now()) @map("create_time")
  updateTime  DateTime @default(now()) @map("update_time")
  version     Int

  album    Album     @relation(fields: [albumId], references: [id])
  articles Article[]

  @@map("t_picture")
}

model Tag {
  id         Int      @id @default(autoincrement())
  tagName    String   @map("tag_name") @db.VarChar(32)
  color      String   @db.VarChar(16)
  createTime DateTime @default(now()) @map("create_time")
  updateTime DateTime @default(now()) @map("update_time")
  version    Int

  articles Article[]

  @@map("t_tag")
}
